<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="/stat/statMapper">
	<select id="isInTarget" parameterType="hashmap" resultType="int">
		select count(*) as cnt from batargettb where year = '${year}' and season = '${season}' and store = '${store}'
	</select>
	<insert id="insTarget" parameterType="hashmap">
		insert into batargettb
		(year, season, store, regis_no, pay, create_resi_no, create_date)
		values
		('${year}', '${season}', '${store}', '${regis_no}', '${pay}', '${login_seq}', TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'))
	</insert>
	<update id="upTarget" parameterType="hashmap">
		update batargettb
		set
		regis_no = '${regis_no}', pay = '${pay}'
		where
		year = '${year}' and season = '${season}' and store = '${store}'
	</update>
	<select id="getTarget" parameterType="hashmap" resultType="hashmap">
		select * from batargettb where year = '${year}' and season = '${season}'
	</select>
	<select id="getTargetLong" parameterType="hashmap" resultType="hashmap">
		select * from batargettb where 
		year = '${selYear1}'
		and season = '${selSeason1}'
		<if test="!store.equals('')">
	   		and store = '${store}'
	   	</if>
	</select>
	<select id="getPerfor" parameterType="hashmap" resultType="hashmap">
	
		select 
		count(decode(baperetb.pos_no, '070013', 1)) as web, 
        count(decode(baperetb.pos_no, '070014', 1)) as mobile, 
        count(baperetb.regis_fee) as person, nvl(sum(baperetb.regis_fee), 0) as regis_fee 
		from 
		baperetb
		left join
		bapelttb
		on
		baperetb.store = bapelttb.store
		and baperetb.period = bapelttb.period
		and baperetb.subject_cd = bapelttb.subject_cd
		and baperetb.main_cd = bapelttb.main_cd
		and baperetb.sect_cd = bapelttb.sect_cd
		where 
		baperetb.store = '${store}' 
		and baperetb.period <![CDATA[>=]]> '${start_peri}' 
		and baperetb.period <![CDATA[<=]]> '${end_peri}' 
		and baperetb.recpt_no != '*' 
		and baperetb.regis_cancel_fg != '2'
		and bapelttb.main_cd = '${main_cd}'
		and bapelttb.subject_fg = '${subject_fg}'
	</select>
	<select id="getPerforUnion" parameterType="hashmap" resultType="hashmap">
	
		SELECT
		    main_cd,
		    subject_fg,
		    decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
		    ba_main_nm(main_cd) main_nm,
		    
		    SUM(s_uprice) s_uprice,
		    SUM(s_web_uprice) s_web_uprice,
		    SUM(s_mobile_uprice) s_mobile_uprice,
		    SUM(s_person) s_person,
		    SUM(s_web_person) s_web_person,
		    SUM(s_mobile_person) s_mobile_person,
		    
		    SUM(b_uprice) b_uprice,
		    SUM(b_web_uprice) b_web_uprice,
		    SUM(b_mobile_uprice) b_mobile_uprice,
		    SUM(b_person) b_person,
		    SUM(b_web_person) b_web_person,
		    SUM(b_mobile_person) b_mobile_person,
		    
		    SUM(p_uprice) p_uprice,
		    SUM(p_web_uprice) p_web_uprice,
		    SUM(p_mobile_uprice) p_mobile_uprice,
		    SUM(p_person) p_person,
		    SUM(p_web_person) p_web_person,
		    SUM(p_mobile_person) p_mobile_person,
		    
		    SUM(w_uprice) w_uprice,
		    SUM(w_web_uprice) w_web_uprice,
		    SUM(w_mobile_uprice) w_mobile_uprice,
		    SUM(w_person) w_person,
		    SUM(w_web_person) w_web_person,
		    SUM(w_mobile_person) w_mobile_person
		    
		    
		    
		    
		    
		
		FROM
		    (
		        SELECT
		            main_cd,
		            subject_fg,
		            SUM(b_uprice) b_uprice,
		            SUM(b_web_uprice) b_web_uprice,
		            SUM(b_mobile_uprice) b_mobile_uprice,
		            SUM(b_person) b_person,
		            SUM(s_uprice) s_uprice,
		            SUM(s_web_uprice) s_web_uprice,
		            SUM(s_mobile_uprice) s_mobile_uprice,
		            SUM(s_person) s_person,
		            SUM(w_uprice) w_uprice,
		            SUM(w_web_uprice) w_web_uprice,
		            SUM(w_mobile_uprice) w_mobile_uprice,
		            SUM(w_person) w_person,
		            SUM(p_uprice) p_uprice,
		            SUM(p_web_uprice) p_web_uprice,
		            SUM(p_mobile_uprice) p_mobile_uprice,
		            SUM(p_person) p_person,
		            
		            
		            SUM(b_web_person) b_web_person,
		            SUM(b_mobile_person) b_mobile_person,
		            SUM(s_web_person) s_web_person,
		            SUM(s_mobile_person) s_mobile_person,
		            SUM(w_web_person) w_web_person,
		            SUM(w_mobile_person) w_mobile_person,
		            SUM(p_web_person) p_web_person,
		            SUM(p_mobile_person) p_mobile_person
		        FROM
		            (
		                SELECT
		                    t1.main_cd,
		                    t1.subject_fg,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) s_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) s_web_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) s_mobile_uprice,
					        nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) s_person,
					        decode(t1.pos_no, '070013', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) s_web_person,
					        decode(t1.pos_no, '070014', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) s_mobile_person,
					        
		                    0 b_uprice,
		                    0 b_web_uprice,
		                    0 b_mobile_uprice,
		                    0 b_person,
		                    0 b_web_person,
		                    0 b_mobile_person,
		                    
		                    0 p_uprice,
		                    0 p_web_uprice,
		                    0 p_mobile_uprice,
		                    0 p_person,
		                    0 p_web_person,
		                    0 p_mobile_person,
		                    
		                    0 w_uprice,
		                    0 w_web_uprice,
		                    0 w_mobile_uprice,
		                    0 w_person,
		                    0 w_web_person,
		                    0 w_mobile_person
		                    
		                    
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
                        		a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '02' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd}' 
					            and a.period <![CDATA[>=]]> '${s_start_peri}'
					            and a.period <![CDATA[<=]]> '${s_end_peri}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
					    left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)
					    
					    
		                UNION ALL  
		                SELECT
		                    t1.main_cd,
		                    t1.subject_fg,
		                    0 s_uprice,
		                    0 s_web_uprice,
		                    0 s_mobile_uprice,
		                    0 s_person,
		                    0 s_web_person,
		                    0 s_mobile_person,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) b_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) b_web_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) b_mobile_uprice,
					        nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) b_person,
					        decode(t1.pos_no, '070013', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) b_web_person,
					        decode(t1.pos_no, '070014', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) b_mobile_person,
					        
					        0 p_uprice,
		                    0 p_web_uprice,
		                    0 p_mobile_uprice,
		                    0 p_person,
		                    0 p_web_person,
		                    0 p_mobile_person,
					        
		                    0 w_uprice,
		                    0 w_web_uprice,
		                    0 w_mobile_uprice,
		                    0 w_person,
		                    0 w_web_person,
		                    0 w_mobile_person
		                    
		                    
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
					            a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '03' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd}' 
					            and a.period <![CDATA[>=]]> '${b_start_peri}'
					            and a.period <![CDATA[<=]]> '${b_end_peri}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
					    left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)
		                      
		                
		                UNION ALL  
		                 SELECT
		                    t1.main_cd,
		                    t1.subject_fg,
		                    0 s_uprice,
		                    0 s_web_uprice,
		                    0 s_mobile_uprice,
		                    0 s_person,
		                    0 s_web_person,
		                    0 s_mobile_person,
		                    0 b_uprice,
		                    0 b_web_uprice,
		                    0 b_mobile_uprice,
		                    0 b_person,
		                    0 b_web_person,
		                    0 b_mobile_person,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) p_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) p_web_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) p_mobile_uprice,
					        nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) p_person,
					        decode(t1.pos_no, '070013', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) p_web_person,
					        decode(t1.pos_no, '070014', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) p_mobile_person,
					        
		                    0 w_uprice,
		                    0 w_web_uprice,
		                    0 w_mobile_uprice,
		                    0 w_person,
		                    0 w_web_person,
		                    0 w_mobile_person
		                    
		                    
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
					            a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '04' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd}' 
					            and a.period <![CDATA[>=]]> '${p_start_peri}'
					            and a.period <![CDATA[<=]]> '${p_end_peri}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
					    left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)
		                      
		                
		                UNION ALL  
		                SELECT
		                    t1.main_cd,
		                    t1.subject_fg,
		                    0 s_uprice,
		                    0 s_web_uprice,
		                    0 s_mobile_uprice,
		                    0 s_person,
		                    0 s_web_person,
		                    0 s_mobile_person,
		                    0 b_uprice,
		                    0 b_web_uprice,
		                    0 b_mobile_uprice,
		                    0 b_person,
		                    0 b_web_person,
		                    0 b_mobile_person,
		                    0 p_uprice,
		                    0 p_web_uprice,
		                    0 p_mobile_uprice,
		                    0 p_person,
		                    0 p_web_person,
		                    0 p_mobile_person,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) w_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) w_web_uprice,
					        decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) w_mobile_uprice,
					        nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) w_person,
					        decode(t1.pos_no, '070013', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) w_web_person,
					        decode(t1.pos_no, '070014', nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0), 0) w_mobile_person
		                    
		                    
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
					            a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '05' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd}' 
					            and a.period <![CDATA[>=]]> '${w_start_peri}'
					            and a.period <![CDATA[<=]]> '${w_end_peri}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
		                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)    
					    
		                
		                UNION ALL  
		                select
		                main_cd,
		                subject_fg,
		                0 s_uprice,
		                0 s_web_uprice,
		                0 s_mobile_uprice,
		                0 s_person,
		                0 s_web_person,
		                0 s_mobile_person,
		                
		                0 b_uprice,
		                0 b_web_uprice,
		                0 b_mobile_uprice,
		                0 b_person,
		                0 b_web_person,
		                0 b_mobile_person,
		                
		                0 p_uprice,
		                0 p_web_uprice,
		                0 p_mobile_uprice,
		                0 p_person,
		                0 p_web_person,
		                0 p_mobile_person,
		                
		                0 w_uprice,
		                0 w_web_uprice,
		                0 w_mobile_uprice,
		                0 w_person,
		                0 w_web_person,
		                0 w_mobile_person
		                
		                from (
		                SELECT
		                    sub_code as main_cd,
		                    '1' as subject_fg
		                FROM
		                    bacodetb
		                WHERE
		                    code_fg = '09' and delete_yn != 'Y'
		                union all
		                SELECT
		                    sub_code as main_cd,
		                    '2' as subject_fg
		                FROM
		                    bacodetb
		                WHERE
		                    code_fg = '09' and delete_yn != 'Y'
		                union all
		                SELECT
		                    sub_code as main_cd,
		                    '3' as subject_fg
		                FROM
		                    bacodetb
		                WHERE
		                    code_fg = '09' and delete_yn != 'Y'
		                )

		            )
		        GROUP BY
		            main_cd,
		            subject_fg
		    )
		GROUP BY
		    main_cd, subject_fg
		ORDER BY
		    main_cd, subject_fg
            
       
	</select>
	<select id="getPayment" parameterType="hashmap" resultType="hashmap">
		
	select 
	main_cd,
	ba_main_nm(main_cd) main_nm,
	sum(now_lect_pay) now_lect_pay,
	sum(target_lect_pay) target_lect_pay,
	sum(now_uprice) now_uprice,
	sum(target_uprice) target_uprice
	from
	(
	
	    SELECT
	        bapelttb.main_cd,
	        bajrcotb.lect_pay as now_lect_pay,
	        0 target_lect_pay,
	        0 now_uprice,
	        0 target_uprice
	    FROM
	        bajrcotb,
	        bapelttb
	    WHERE
	        1 = 1
	        AND bajrcotb.store = '${store}'
	        AND bajrcotb.period = '${period}'
	        AND bajrcotb.hq = bapelttb.hq
	        AND bajrcotb.store = bapelttb.store
	        AND bajrcotb.period = bapelttb.period
	        AND bajrcotb.subject_cd = bapelttb.subject_cd
	        and bajrcotb.JOURNAL_YN = 'Y'
	        and bajrcotb.lect_ym = '${lect_ym}'
	    UNION ALL
	    SELECT
	        bapelttb.main_cd,
	        bajrprtb.lect_pay as now_lect_pay,
	        0 target_lect_pay,
	        0 now_uprice,
	        0 target_uprice
	    FROM
	        bajrprtb,
	        bapelttb
	    WHERE
	        1 = 1
	        AND bajrprtb.store = '${store}'
	        AND bajrprtb.period = '${period}'
	        AND bajrprtb.hq = bapelttb.hq
	        AND bajrprtb.store = bapelttb.store
	        AND bajrprtb.period = bapelttb.period
	        AND bajrprtb.subject_cd = bapelttb.subject_cd
	        and bajrprtb.JOURNAL_YN = 'Y'
	        and bajrprtb.lect_ym = '${lect_ym}'
	    UNION ALL
	    SELECT
	        c.main_cd,
	        0 as now_lect_pay,
	        0 target_lect_pay,
	        decode(a.sale_fg, '01', (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)), (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)) * - 1) now_uprice,
	        0 target_uprice
	        
	    FROM
	        batrmstb   a,
	        batrdetb   b,
	        bapelttb   c
	    WHERE
	        a.hq = b.hq
	        AND a.store = b.store
	        AND a.sale_ymd = b.sale_ymd
	        AND a.pos_no = b.pos_no
	        AND a.recpt_no = b.recpt_no
	        AND a.period = c.period
	        AND b.hq = c.hq
	        AND b.store = c.store
	        AND b.subject_cd = c.subject_cd
	        AND a.hq = '00'
	        and a.store = '${store}' 
	        and a.period = '${period}' 
	    UNION ALL
	    SELECT
	        bapelttb.main_cd,
	        0 now_lect_pay,
	        bajrcotb.lect_pay as target_lect_pay,
	        0 now_uprice,
	        0 target_uprice
	    FROM
	        bajrcotb,
	        bapelttb
	    WHERE
	        1 = 1
	        AND bajrcotb.store = '${target_store}'
	        AND bajrcotb.period = '${target_period}'
	        AND bajrcotb.hq = bapelttb.hq
	        AND bajrcotb.store = bapelttb.store
	        AND bajrcotb.period = bapelttb.period
	        AND bajrcotb.subject_cd = bapelttb.subject_cd
	        and bajrcotb.JOURNAL_YN = 'Y'
	        and bajrcotb.lect_ym = '${lect_ym_target}'
	    UNION ALL
	    SELECT
	        bapelttb.main_cd,
	        0 now_lect_pay,
	        bajrprtb.lect_pay as target_lect_pay,
	        0 now_uprice,
	        0 target_uprice
	    FROM
	        bajrprtb,
	        bapelttb
	    WHERE
	        1 = 1
	        AND bajrprtb.store = '${target_store}'
	        AND bajrprtb.period = '${target_period}'
	        AND bajrprtb.hq = bapelttb.hq
	        AND bajrprtb.store = bapelttb.store
	        AND bajrprtb.period = bapelttb.period
	        AND bajrprtb.subject_cd = bapelttb.subject_cd
	        and bajrprtb.JOURNAL_YN = 'Y'
	        and bajrprtb.lect_ym = '${lect_ym_target}'
	    UNION ALL
	    SELECT
	        c.main_cd,
	        0 as now_lect_pay,
	        0 target_lect_pay,
	        0 now_uprice,
	        decode(a.sale_fg, '01', (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)), (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)) * - 1) as target_uprice
	        
	    FROM
	        batrmstb   a,
	        batrdetb   b,
	        bapelttb   c
	    WHERE
	        a.hq = b.hq
	        AND a.store = b.store
	        AND a.sale_ymd = b.sale_ymd
	        AND a.pos_no = b.pos_no
	        AND a.recpt_no = b.recpt_no
	        AND a.period = c.period
	        AND b.hq = c.hq
	        AND b.store = c.store
	        AND b.subject_cd = c.subject_cd
	        AND a.hq = '00'
	        and a.store = '${target_store}' 
	        and a.period = '${target_period}' 
	)
	group by main_cd
	order by main_cd
			
	</select>
	<select id="getPerforLect" parameterType="hashmap" resultType="hashmap">
	
		SELECT
		    main_cd,
            sect_cd,
		    subject_fg,
		    decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
		    ba_main_nm(main_cd) main_nm,
		    ba_sect_nm('00', '${store}', main_cd, sect_cd) as sect_nm,
		    SUM(decode(now_subject_cd, ' ', 0, '1')) now_lect_cnt,
		    SUM(now_uprice) now_uprice,
		    SUM(now_person) now_person,
		    SUM(decode(target_subject_cd, ' ', 0, '1')) target_lect_cnt,
		    SUM(target_uprice) target_uprice,
		    SUM(target_person) target_person
		
		FROM
		    (
		        SELECT
		            main_cd,
                    sect_cd,
		            subject_fg,
		            now_subject_cd,
		            SUM(now_uprice) now_uprice,
		            SUM(now_person) now_person,
		            target_subject_cd,
		            SUM(target_uprice) target_uprice,
		            SUM(target_person) target_person
		        FROM
		            (
		                SELECT
		                    t1.main_cd,
                            t1.sect_cd,
		                    t1.subject_fg,
		                    ' ' now_subject_cd,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) now_uprice,
		                    nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) now_person,
		                    ' ' target_subject_cd,
		                    0 target_uprice,
		                    0 target_person
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
					            a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
				            	<if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '${store}' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd1}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd1}' 
					            and a.period <![CDATA[>=]]> '${period}'
					            and a.period <![CDATA[<=]]> '${period}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
					    left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)
		                      
					    
		                UNION ALL  
		                SELECT
		                    t1.main_cd,
                            t1.sect_cd,
		                    t1.subject_fg,
		                    ' ' now_subject_cd,
		                    0 now_uprice,
		                    0 now_person,
		                    ' ' target_subject_cd,
		                    decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) target_uprice,
		                    nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) target_person
		                    
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
					            a.ori_sale_ymd,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
		                            and d.performance != 'OFF'
								</if> 
					            AND a.hq = '00'
					            and a.store = '${target_store}' 
					            and a.sale_ymd <![CDATA[>=]]> '${start_ymd2}' 
					            and a.sale_ymd <![CDATA[<=]]> '${end_ymd2}' 
					            and a.period <![CDATA[>=]]> '${target_period}'
					            and a.period <![CDATA[<=]]> '${target_period}'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
		                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
					    
                        
                        UNION ALL  
		                select
		                main_cd,
                        sect_cd,
		                subject_fg,
		                ' ' as now_subject_cd,
		                0 now_uprice,
		                0 now_person,
		                ' ' as target_subject_cd,
		                0 target_uprice,
		                0 target_person
		                from (
		                SELECT
                            bacodetb.sub_code as main_cd,
		                    basecttb.sect_cd,
		                    '1' as subject_fg
		                FROM
		                    basecttb,
                            bacodetb
		                WHERE
                            trim(basecttb.main_cd) = trim(bacodetb.sub_code)
                            and bacodetb.code_fg = '09' and bacodetb.delete_yn != 'Y'
		                    and basecttb.delete_yn != 'Y' and (basecttb.store = '${store}' or basecttb.store = '99')
		                union all
		                SELECT
                            bacodetb.sub_code as main_cd,
		                    basecttb.sect_cd,
		                    '2' as subject_fg
		                FROM
		                    basecttb,
                            bacodetb
		                WHERE
                            trim(basecttb.main_cd) = trim(bacodetb.sub_code)
                            and bacodetb.code_fg = '09' and bacodetb.delete_yn != 'Y'
		                    and basecttb.delete_yn != 'Y' and (basecttb.store = '${store}' or basecttb.store = '99')
		                union all
		               SELECT
                            bacodetb.sub_code as main_cd,
		                    basecttb.sect_cd,
		                    '3' as subject_fg
		                FROM
		                    basecttb,
                            bacodetb
		                WHERE
                            trim(basecttb.main_cd) = trim(bacodetb.sub_code)
                            and bacodetb.code_fg = '09' and bacodetb.delete_yn != 'Y'
		                    and basecttb.delete_yn != 'Y' and (basecttb.store = '${store}' or basecttb.store = '99')
		                )
		                
		                
		                union all
		                SELECT
		                    c.main_cd,
                            c.sect_cd,
		                    c.subject_fg,
		                    c.subject_cd now_subject_cd,
		                    0 now_uprice,
		                    0 now_person,
		                    ' ' target_subject_cd,
		                    0 target_uprice,
		                    0 target_person
		                from bapelttb   c,
		                	 basecttb   d
		                where c.store = '${store}' and c.period = '${period}'
		                    <if test="isPerformance eq 'false'.toString()">
	                            and d.performance != 'OFF'
							</if> 
	                        and (d.store = c.store or d.store = '99')
	                        and d.main_cd = c.main_cd
	                        and d.sect_cd = c.sect_cd
	                    union all
		                SELECT
		                    c.main_cd,
                            c.sect_cd,
		                    c.subject_fg,
		                    ' ' now_subject_cd,
		                    0 now_uprice,
		                    0 now_person,
		                    c.subject_cd target_subject_cd,
		                    0 target_uprice,
		                    0 target_person
		                from bapelttb   c,
		                	 basecttb   d
		                where c.store = '${target_store}' and c.period = '${target_period}'
		                    <if test="isPerformance eq 'false'.toString()">
	                            and d.performance != 'OFF'
							</if> 
	                        and (d.store = c.store or d.store = '99')
	                        and d.main_cd = c.main_cd
	                        and d.sect_cd = c.sect_cd
		              
		
		            )
		        GROUP BY
		            main_cd,
                    sect_cd,
		            subject_fg,
		            now_subject_cd,
		            target_subject_cd
		    )
		GROUP BY
		    subject_fg, main_cd, sect_cd
		ORDER BY
		    subject_fg, main_cd, sect_cd
            
          
	</select>
	<select id="getPeltCount" parameterType="hashmap" resultType="hashmap">
		select count(*) as cnt from (
		select
			store, period, main_cd, sect_cd, subject_cd, subject_nm, subject_fg,
			regis_fee, food_amt, 
			(select short_name from bacodetb where CODE_FG = '02' and sub_code = store) as store_nm,
			ba_main_nm(main_cd) main_nm,
			ba_sect_nm('00', store, main_cd, sect_cd) as sect_nm,
			decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
			sum(regis_no) as regis_no,
			sum(uprice) as uprice,
			sum(enuri_amt) as enuri_amt,
			sum(new) as new,
			part_regis_amt
			
			
			from (
			
				select
				t1.store,
				t1.period,
				t1.main_cd,
				t1.sect_cd,
				t1.subject_cd,
				t1.subject_fg,
				t1.subject_nm,
				t1.regis_fee,
				t1.food_amt,
                nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0) as regis_no,
                t1.part_regis_amt,
				decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
		            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
		            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
		        ) as uprice,
				decode(t1.sale_fg, '01', (t1.enuri_amt1 + t1.enuri_amt2), (t1.enuri_amt1 + t1.enuri_amt2) * - 1) enuri_amt,
				(
		            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPEREtb WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
		            then 
		                decode
		                (
		                    ( SELECT MIN(PERIOD)  AS COUNT             
		                    FROM BAPEREtb         
		                    WHERE
		                    STORE        =  '${store}' 
		                    AND RECPT_NO != '*'
		                    AND REGIS_CANCEL_FG = '1'
		                    AND CUST_NO    =  t1.cust_no
		                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
		                    GROUP BY CUST_NO  ), null, 1, 0
		                ) 
		            else 0 end
		        ) as new
		        
		        
		        
		        from
			    (
			        SELECT
			            c.hq,
			            c.subject_nm,
			            c.regis_fee,
			            c.food_amt,
			            c.main_cd,
			            c.sect_cd,
			            c.subject_fg,
			            c.subject_cd,
			            c.is_two,
			            a.store,
			            a.period,
			            a.sale_ymd,
			            a.recpt_no,
			            a.pos_no,
			            a.cancel_yn,
			            a.cust_no,
			            b.seq_no,
			            a.sale_fg,
			            b.uprice,
			            b.enuri_amt1,
			            b.enuri_amt2,
			            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
			            c.part_regis_amt,
			            a.ori_sale_ymd,
                        a.ori_pos_no,
                        a.ori_recpt_no
			            
			            
			        FROM
			            batrmstb   a,
			            batrdetb   b,
			            bapelttb   c,
			            basecttb   d
			        WHERE
			            a.hq = b.hq
			            AND a.store = b.store
			            AND a.sale_ymd = b.sale_ymd
			            AND a.pos_no = b.pos_no
			            AND a.recpt_no = b.recpt_no
			            AND a.period = c.period
			            AND b.hq = c.hq
			            AND b.store = c.store
			            AND b.subject_cd = c.subject_cd
			            and (d.store = c.store or d.store = '99')
			            and d.main_cd = c.main_cd
			            and d.sect_cd = c.sect_cd
			            and d.delete_yn != 'Y'
			            <if test="!sect_cd.equals('')">
							and c.sect_cd = ${sect_cd}
						</if>
						<if test="!main_cd.equals('')">
							and c.main_cd = ${main_cd}
						</if>
						<if test="!subject_fg.equals('')">
							and c.subject_fg = '${subject_fg}'
						</if>
					    <if test="isPerformance eq 'false'.toString()">
		                     and d.performance != 'OFF'
						</if> 
			            AND a.hq = '00'
			            and a.store = '${store}' 
			            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
			            and a.period = '${period}' 
			    ) t1
			    left join
			    baperetb e1
			    on
			    e1.hq = t1.hq
			    and e1.store = t1.store
			    and e1.period = t1.period
			    and e1.subject_cd = t1.subject_cd
			    and e1.seq = t1.seq_no
			    and e1.sale_ymd = t1.sale_ymd
			    and e1.recpt_no = t1.recpt_no
			    and e1.pos_no = t1.pos_no
			    left join
			    baperetb e2
			    on
			    e2.hq = t1.hq
			    and e2.store = t1.store
			    and e2.period = t1.period
			    and e2.subject_cd = t1.subject_cd
			    and e2.seq = t1.seq_no
			    and e2.sale_ymd = t1.ori_sale_ymd
			    and e2.recpt_no = t1.ori_recpt_no
			    and e2.pos_no = t1.ori_pos_no
                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
			    
			    
			    union all
			    
			    select
				store,
				period,
				main_cd,
				 sect_cd,
				subject_cd,
				subject_fg,
				subject_nm,
				regis_fee,
				food_amt,
                0 as regis_no,
                0 as part_regis_amt,
				0 as uprice,
				0 as enuri_amt,
				0 as new
				from bapelttb
				where store = '${store}' and period = '${period}'
				<if test="!sect_cd.equals('')">
					and sect_cd = ${sect_cd}
				</if>
				<if test="!main_cd.equals('')">
					and main_cd = ${main_cd}
				</if>
				<if test="!subject_fg.equals('')">
					and subject_fg = '${subject_fg}'
				</if>
		)
		group by
		store,
		period,
		main_cd,
		sect_cd,
		subject_cd,
		subject_nm,
		subject_fg,
		regis_fee,
		food_amt,
        part_regis_amt
        )
	</select>
	<select id="getPelt" parameterType="hashmap" resultType="hashmap">
		select
		X.*
		from (
			select rownum as rnum, A.*
			from (
			
			
		select
			store, period, main_cd, sect_cd, subject_cd, subject_nm, subject_fg,
			regis_fee, food_amt, 
			(select short_name from bacodetb where CODE_FG = '02' and sub_code = store) as store_nm,
			ba_main_nm(main_cd) main_nm,
			ba_sect_nm('00', store, main_cd, sect_cd) as sect_nm,
			decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
			sum(regis_no) as regis_no,
			sum(uprice) as uprice,
			sum(enuri_amt) as enuri_amt,
			sum(new) as new,
			part_regis_amt
			
			
			from (
			
				select
				t1.store,
				t1.period,
				t1.main_cd,
				t1.sect_cd,
				t1.subject_cd,
				t1.subject_fg,
				t1.subject_nm,
				t1.regis_fee,
				t1.food_amt,
                nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0) as regis_no,
                t1.part_regis_amt,
				decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
		            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
		            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
		        ) as uprice,
				decode(t1.sale_fg, '01', (t1.enuri_amt1 + t1.enuri_amt2), (t1.enuri_amt1 + t1.enuri_amt2) * - 1) enuri_amt,
				(
		            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPEREtb WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
		            then 
		                decode
		                (
		                    ( SELECT MIN(PERIOD)  AS COUNT             
		                    FROM BAPEREtb         
		                    WHERE
		                    STORE        =  '${store}' 
		                    AND RECPT_NO != '*'
		                    AND REGIS_CANCEL_FG = '1'
		                    AND CUST_NO    =  t1.cust_no
		                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
		                    GROUP BY CUST_NO  ), null, 1, 0
		                ) 
		            else 0 end
		        ) as new
		        
		        
		        
		        from
			    (
			        SELECT
			            c.hq,
			            c.subject_nm,
			            c.regis_fee,
			            c.food_amt,
			            c.main_cd,
			            c.sect_cd,
			            c.subject_fg,
			            c.subject_cd,
			            c.is_two,
			            a.store,
			            a.period,
			            a.sale_ymd,
			            a.recpt_no,
			            a.pos_no,
			            a.cancel_yn,
			            a.cust_no,
			            b.seq_no,
			            a.sale_fg,
			            b.uprice,
			            b.enuri_amt1,
			            b.enuri_amt2,
			            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
			            c.part_regis_amt,
			            a.ori_sale_ymd,
                        a.ori_pos_no,
                        a.ori_recpt_no
			            
			            
			        FROM
			            batrmstb   a,
			            batrdetb   b,
			            bapelttb   c,
			            basecttb   d
			        WHERE
			            a.hq = b.hq
			            AND a.store = b.store
			            AND a.sale_ymd = b.sale_ymd
			            AND a.pos_no = b.pos_no
			            AND a.recpt_no = b.recpt_no
			            AND a.period = c.period
			            AND b.hq = c.hq
			            AND b.store = c.store
			            AND b.subject_cd = c.subject_cd
			            and (d.store = c.store or d.store = '99')
			            and d.main_cd = c.main_cd
			            and d.sect_cd = c.sect_cd
			            and d.delete_yn != 'Y'
			            <if test="!sect_cd.equals('')">
							and c.sect_cd = ${sect_cd}
						</if>
						<if test="!main_cd.equals('')">
							and c.main_cd = ${main_cd}
						</if>
						<if test="!subject_fg.equals('')">
							and c.subject_fg = '${subject_fg}'
						</if>
					    <if test="isPerformance eq 'false'.toString()">
		                     and d.performance != 'OFF'
						</if> 
			            AND a.hq = '00'
			            and a.store = '${store}' 
			            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
			            and a.period = '${period}' 
			    ) t1
			    left join
			    baperetb e1
			    on
			    e1.hq = t1.hq
			    and e1.store = t1.store
			    and e1.period = t1.period
			    and e1.subject_cd = t1.subject_cd
			    and e1.seq = t1.seq_no
			    and e1.sale_ymd = t1.sale_ymd
			    and e1.recpt_no = t1.recpt_no
			    and e1.pos_no = t1.pos_no
			    left join
			    baperetb e2
			    on
			    e2.hq = t1.hq
			    and e2.store = t1.store
			    and e2.period = t1.period
			    and e2.subject_cd = t1.subject_cd
			    and e2.seq = t1.seq_no
			    and e2.sale_ymd = t1.ori_sale_ymd
			    and e2.recpt_no = t1.ori_recpt_no
			    and e2.pos_no = t1.ori_pos_no
                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
			    
			    
			    union all
			    
			    select
				store,
				period,
				main_cd,
				 sect_cd,
				subject_cd,
				subject_fg,
				subject_nm,
				regis_fee,
				food_amt,
                0 as regis_no,
                0 as part_regis_amt,
				0 as uprice,
				0 as enuri_amt,
				0 as new
				from bapelttb
				where store = '${store}' and period = '${period}'
				<if test="!sect_cd.equals('')">
					and sect_cd = ${sect_cd}
				</if>
				<if test="!main_cd.equals('')">
					and main_cd = ${main_cd}
				</if>
				<if test="!subject_fg.equals('')">
					and subject_fg = '${subject_fg}'
				</if>
		)
		group by
		store,
		period,
		main_cd,
		sect_cd,
		subject_cd,
		subject_nm,
		subject_fg,
		regis_fee,
		food_amt,
        part_regis_amt
		<if test="!order_by.equals('') and !sort_type.equals('')">
			order by ${sort_type} ${order_by}
		</if>
	) A
			where rownum <![CDATA[<=]]> #{e_rownum}) X
		where X.rnum <![CDATA[>]]> #{s_rownum}		
	</select>
	<select id="getDetailCount" parameterType="hashmap" resultType="hashmap">
		
		
			select
				count(*) as cnt 
				
				from
			    (
			        SELECT
			            c.hq,
			            c.subject_nm,
			            c.regis_fee,
			            c.food_amt,
			            c.main_cd,
			            c.sect_cd,
			            c.subject_fg,
			            c.subject_cd,
			            c.is_two,
			            a.store,
			            a.period,
			            a.sale_ymd,
			            a.recpt_no,
			            a.pos_no,
			            a.cancel_yn,
			            a.cust_no,
			            b.seq_no,
			            a.sale_fg,
			            b.uprice,
			            b.enuri_amt1,
			            b.enuri_amt2,
			            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
			            f.kor_nm,
			            f.cus_no,
			            f.birth_ymd,
			            a.ori_sale_ymd,
                        a.ori_pos_no,
                        a.ori_recpt_no
			            
			            
			        FROM
			            batrmstb   a,
			            batrdetb   b,
			            bapelttb   c,
			            basecttb   d,
			            bacusttb   f
			        WHERE
			            a.hq = b.hq
			            AND a.store = b.store
			            AND a.sale_ymd = b.sale_ymd
			            AND a.pos_no = b.pos_no
			            AND a.recpt_no = b.recpt_no
			            AND a.period = c.period
			            AND b.hq = c.hq
			            AND b.store = c.store
			            AND b.subject_cd = c.subject_cd
			            and (d.store = c.store or d.store = '99')
			            and d.main_cd = c.main_cd
			            and d.sect_cd = c.sect_cd
			            and d.delete_yn != 'Y'
			            AND a.hq = '00'
			            and a.store = '${store}' 
			   			and a.period = '${period}' 
			   			and f.cust_no(+) = a.cust_no
			   			
				            and 
				            (
				                (
				                    a.cancel_yn != 'Y'
				                    and a.sale_fg = '01'
				                	<if test="!search_start.equals('')">
				                    and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
				                    and a.sale_ymd <![CDATA[<=]]> '${search_end}'
				                    </if> 
				                )
				                or
				                (
				                    a.sale_ymd <![CDATA[>]]> '${search_end}' 
				                    and a.sale_fg = '02'
				                	<if test="!search_start.equals('')">
				                    and a.ori_sale_ymd <![CDATA[>=]]> '${search_start}' 
				                    and a.ori_sale_ymd <![CDATA[<=]]> '${search_end}'
				                    </if> 
				                )
				            )
			            <if test="!sect_cd.equals('')">
							and c.sect_cd = ${sect_cd}
						</if>
						<if test="!main_cd.equals('')">
							and c.main_cd = ${main_cd}
						</if>
						<if test="!subject_fg.equals('')">
							and c.subject_fg = '${subject_fg}'
						</if>
						<if test="!end_fg.equals('')">
							and c.end_yn = '${end_fg}'
						</if>
					    <if test="isPerformance eq 'false'.toString()">
		                     and d.performance != 'OFF'
						</if> 
			    ) t1
			    left join
			    baperetb e1
			    on
			    e1.hq = t1.hq
			    and e1.store = t1.store
			    and e1.period = t1.period
			    and e1.subject_cd = t1.subject_cd
			    and e1.seq = t1.seq_no
			    and e1.sale_ymd = t1.sale_ymd
			    and e1.recpt_no = t1.recpt_no
			    and e1.pos_no = t1.pos_no
			    left join
			    baperetb e2
			    on
			    e2.hq = t1.hq
			    and e2.store = t1.store
			    and e2.period = t1.period
			    and e2.subject_cd = t1.subject_cd
			    and e2.seq = t1.seq_no
			    and e2.sale_ymd = t1.ori_sale_ymd
			    and e2.recpt_no = t1.ori_recpt_no
			    and e2.pos_no = t1.ori_pos_no
                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
					    and nvl(w1.mem_fg, 'A') != 'C'
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
					    and nvl(w2.mem_fg, 'A') != 'C'
			    
			    
			    
		
		
	</select>
	<select id="getDetail" parameterType="hashmap" resultType="hashmap">
		select
		X.*
		from (
			select rownum as rnum, A.*
			from (
				select
				decode(t1.store, '02', '수원점', '03', '분당점', '04', '평택점', '05', '원주점') as store_nm,
				decode(t1.subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
				t1.store,
				t1.period,
				decode(t1.sale_fg, '01', t1.sale_ymd, t1.ori_sale_ymd) as sale_ymd,
				decode(t1.sale_fg, '01', t1.pos_no, t1.ori_pos_no) as pos_no,
				decode(t1.sale_fg, '01', t1.recpt_no, t1.ori_recpt_no) as recpt_no,
				t1.kor_nm,
				t1.cus_no,
				t1.birth_ymd,
				nvl(
				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum',
				    '112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
				  from ams_bz_sect_mbr_grade bb
				     where bb.cus_no = trim(t1.cust_no)
				     and bb.bz_sect = '1'
                and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
				     
				),'Entry'
				) as grade,
				t1.subject_cd,
				t1.subject_nm,
				(t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) as uprice,
				t1.food_amt,
				t1.enuri_amt,
				t1.start_ymd,
				t1.end_ymd,
				t1.end_yn,
				case when t1.end_yn = 'Y' then '폐강'
	             when t1.end_yn = 'O' then '개강'
	             when (t1.CAPACITY_NO - (NVL(t1.WEB_REGIS_NO,0)) - (NVL(t1.REGIS_NO,0))) <![CDATA[<=]]> 0 then '마감'
	           	 	 else '' end as ISPLAY
				
				from
			    (
			        SELECT
			            c.hq,
			            c.subject_nm,
			            c.regis_fee,
			            c.food_amt,
			            c.main_cd,
			            c.sect_cd,
			            c.subject_fg,
			            c.subject_cd,
			            c.is_two,
			            c.regis_no,
			            c.web_regis_no,
			            c.capacity_no,
			            c.start_ymd,
			            c.end_ymd,
			            c.end_yn,
			            a.store,
			            a.period,
			            a.sale_ymd,
			            a.recpt_no,
			            a.pos_no,
			            a.cancel_yn,
			            a.cust_no,
			            b.seq_no,
			            a.sale_fg,
			            a.ori_recpt_no,
			            a.ori_pos_no,
			            a.ori_sale_ymd,
			            b.uprice,
			            b.enuri_amt1,
			            b.enuri_amt2,
			            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
			            f.kor_nm,
			            f.cus_no,
			            f.birth_ymd
			            
			            
			            
			        FROM
			            batrmstb   a,
			            batrdetb   b,
			            bapelttb   c,
			            basecttb   d,
			            bacusttb   f
			        WHERE
			            a.hq = b.hq
			            AND a.store = b.store
			            AND a.sale_ymd = b.sale_ymd
			            AND a.pos_no = b.pos_no
			            AND a.recpt_no = b.recpt_no
			            AND a.period = c.period
			            AND b.hq = c.hq
			            AND b.store = c.store
			            AND b.subject_cd = c.subject_cd
			            and (d.store = c.store or d.store = '99')
			            and d.main_cd = c.main_cd
			            and d.sect_cd = c.sect_cd
			            and d.delete_yn != 'Y'
			            AND a.hq = '00'
			            and a.store = '${store}' 
			   			and a.period = '${period}' 
			   			and f.cust_no(+) = a.cust_no
			            and 
			            (
			                (
			                    a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			                    and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
			                    and a.cancel_yn != 'Y'
			                    and a.sale_fg = '01'
			                )
			                or
			                (
			                    a.ori_sale_ymd <![CDATA[>=]]> '${search_start}' 
			                    and a.ori_sale_ymd <![CDATA[<=]]> '${search_end}' 
			                    and a.sale_ymd <![CDATA[>]]> '${search_end}' 
			                    and a.sale_fg = '02'
			                )
			            )
			            <if test="!sect_cd.equals('')">
							and c.sect_cd = ${sect_cd}
						</if>
						<if test="!main_cd.equals('')">
							and c.main_cd = ${main_cd}
						</if>
						<if test="!subject_fg.equals('')">
							and c.subject_fg = '${subject_fg}'
						</if>
						<if test="!end_fg.equals('')">
							and c.end_yn = '${end_fg}'
						</if>
					    <if test="isPerformance eq 'false'.toString()">
		                     and d.performance != 'OFF'
						</if> 
			    ) t1
			    left join
			    baperetb e1
			    on
			    e1.hq = t1.hq
			    and e1.store = t1.store
			    and e1.period = t1.period
			    and e1.subject_cd = t1.subject_cd
			    and e1.seq = t1.seq_no
			    and e1.sale_ymd = t1.sale_ymd
			    and e1.recpt_no = t1.recpt_no
			    and e1.pos_no = t1.pos_no
			    left join
			    baperetb e2
			    on
			    e2.hq = t1.hq
			    and e2.store = t1.store
			    and e2.period = t1.period
			    and e2.subject_cd = t1.subject_cd
			    and e2.seq = t1.seq_no
			    and e2.sale_ymd = t1.ori_sale_ymd
			    and e2.recpt_no = t1.ori_recpt_no
			    and e2.pos_no = t1.ori_pos_no
                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
					    and nvl(w1.mem_fg, 'A') != 'C'
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)   
					    and nvl(w2.mem_fg, 'A') != 'C'   
			    
                
                <if test="!order_by.equals('') and !sort_type.equals('')">
					order by ${sort_type} ${order_by}
				</if>
				
			) A
			where rownum <![CDATA[<=]]> #{e_rownum}) X
		where X.rnum <![CDATA[>]]> #{s_rownum}
	</select>
	<select id="getDaylist" parameterType="hashmap" resultType="hashmap">
		SELECT
		    sale_ymd,
		    decode('${store}', '02', '수원점', '03', '분당점', '04', '평택점', '05', '원주점') as store_nm,
            SUM(a_uprice) a_uprice,
            SUM(a_web_uprice) a_web_uprice,
            SUM(a_mobile_uprice) a_mobile_uprice,
            SUM(a_person) a_person,
            sum(a_new) as a_new,
            SUM(b_uprice) b_uprice,
            SUM(b_web_uprice) b_web_uprice,
            SUM(b_mobile_uprice) b_mobile_uprice,
            SUM(b_person) b_person,
            sum(b_new) as b_new,
            SUM(c_uprice) c_uprice,
            SUM(c_web_uprice) c_web_uprice,
            SUM(c_mobile_uprice) c_mobile_uprice,
            SUM(c_person) c_person,
            sum(c_new) as c_new
		
		FROM
		    (
		        SELECT
                    sale_ymd,
                    SUM(a_uprice) a_uprice,
		            SUM(a_web_uprice) a_web_uprice,
		            SUM(a_mobile_uprice) a_mobile_uprice,
		            SUM(a_person) a_person,
		            sum(a_new) as a_new,
		            SUM(b_uprice) b_uprice,
		            SUM(b_web_uprice) b_web_uprice,
		            SUM(b_mobile_uprice) b_mobile_uprice,
		            SUM(b_person) b_person,
		            sum(b_new) as b_new,
		            SUM(c_uprice) c_uprice,
		            SUM(c_web_uprice) c_web_uprice,
		            SUM(c_mobile_uprice) c_mobile_uprice,
		            SUM(c_person) c_person,
		            sum(c_new) as c_new
		        FROM
		            (
		                SELECT
                            decode(t1.sale_fg, '01', t1.sale_ymd, t1.ori_sale_ymd) as sale_ymd,
                            decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) a_uprice,
							 decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) a_web_uprice,
							decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) a_mobile_uprice,
                            nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) a_person,
                            (
					            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
					            then 
					                decode
					                (
					                    ( SELECT MIN(PERIOD)  AS COUNT             
					                    FROM BAPERETB         
					                    WHERE
					                    STORE        =  '${store}' 
					                    AND RECPT_NO != '*'
					                    AND REGIS_CANCEL_FG = '1'
					                    AND CUST_NO    =  t1.cust_no
					                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
					                    GROUP BY CUST_NO  ), null, 1, 0
					                ) 
					            else 0 end
					        ) as a_new,
                            0 b_uprice,
                            0 b_web_uprice,
                            0 b_mobile_uprice,
                            0 b_person,
                            0 b_new,
                            0 c_uprice,
                            0 c_web_uprice,
                            0 c_mobile_uprice,
                            0 c_person,
                            0 c_new
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.ori_sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            a.cancel_yn,
					            a.cust_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
				                     and d.performance != 'OFF'
								</if> 
					            
					            AND a.hq = '00'
					            and a.store = '${store}' 
				    			and a.period = '${period}' 
					            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            		and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
					            and c.subject_fg = '1'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
		                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
					    
							 
                             UNION ALL
                             
                            SELECT
                            decode(t1.sale_fg, '01', t1.sale_ymd, t1.ori_sale_ymd) as sale_ymd,
                            0 a_uprice,
                            0 a_web_uprice,
                            0 a_mobile_uprice,
                            0 a_person,
                            0 a_new,
                            decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) b_uprice,
							 decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) b_web_uprice,
							decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) b_mobile_uprice,
                            nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) b_person,
                            (
					            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
					            then 
					                decode
					                (
					                    ( SELECT MIN(PERIOD)  AS COUNT             
					                    FROM BAPERETB         
					                    WHERE
					                    STORE        =  '${store}' 
					                    AND RECPT_NO != '*'
					                    AND REGIS_CANCEL_FG = '1'
					                    AND CUST_NO    =  t1.cust_no
					                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
					                    GROUP BY CUST_NO  ), null, 1, 0
					                ) 
					            else 0 end
					        ) as b_new,
                            0 c_uprice,
                            0 c_web_uprice,
                            0 c_mobile_uprice,
                            0 c_person,
                            0 c_new
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.ori_sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            a.cancel_yn,
					            a.cust_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
				                     and d.performance != 'OFF'
								</if> 
					            
					            AND a.hq = '00'
					            and a.store = '${store}' 
				    			and a.period = '${period}' 
					            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			           			and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
					            and c.subject_fg = '2'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
		                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
					    
		                
                             UNION ALL
                             
                            SELECT
                            decode(t1.sale_fg, '01', t1.sale_ymd, t1.ori_sale_ymd) as sale_ymd,
                            0 a_uprice,
                            0 a_web_uprice,
                            0 a_mobile_uprice,
                            0 a_person,
                            0 a_new,
                            0 b_uprice,
                            0 b_web_uprice,
                            0 b_mobile_uprice,
                            0 b_person,
                            0 b_new,
                            decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1),
					            decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1)
					        ) c_uprice,
							 decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070013', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) c_web_uprice,
							decode(nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A'), 'C', 
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0), nvl(decode(w1.part_regis_fee, null, w2.part_regis_fee, w1.part_regis_fee), 0) * - 1), 0),
					            decode(t1.pos_no, '070014', decode(t1.sale_fg, '01', (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)), (t1.uprice-nvl(t1.enuri_amt1, 0) - nvl(t1.enuri_amt2, 0)) * - 1), 0)
					        ) c_mobile_uprice,
                            nvl(
					            case 
					                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
					                            else 2
					                        end
					                    when t1.main_cd = '3' then
					                        case 
					                            when t1.is_two = 'Y' then 2
					                            else 1
					                        end
					                    else 1
					                end
					                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
					                case 
					                    when t1.main_cd = '2' then
					                        case 
					                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
					                            else -2
					                        end
					                    when nvl(t1.main_cd, 0) = '3' then
					                        case 
					                            when t1.is_two = 'Y' then -2
					                            else -1
					                        end
					                    else -1
					                end
					                else 0
					            end
					        , 0) c_person,
                            (
					            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
					            then 
					                decode
					                (
					                    ( SELECT MIN(PERIOD)  AS COUNT             
					                    FROM BAPERETB         
					                    WHERE
					                    STORE        =  '${store}' 
					                    AND RECPT_NO != '*'
					                    AND REGIS_CANCEL_FG = '1'
					                    AND CUST_NO    =  t1.cust_no
					                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
					                    GROUP BY CUST_NO  ), null, 1, 0
					                ) 
					            else 0 end
					        ) as c_new
		                from
					    (
					        SELECT
					            c.hq,
					            c.subject_nm,
					            c.regis_fee,
					            c.food_amt,
					            c.main_cd,
					            c.sect_cd,
					            c.subject_fg,
					            c.subject_cd,
					            c.is_two,
					            a.store,
					            a.period,
					            a.sale_ymd,
					            a.ori_sale_ymd,
					            a.recpt_no,
					            a.pos_no,
					            a.cancel_yn,
					            a.cust_no,
					            b.seq_no,
					            a.sale_fg,
					            b.uprice,
					            b.enuri_amt1,
					            b.enuri_amt2,
					            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
		                        a.ori_pos_no,
		                        a.ori_recpt_no
					            
					            
					        FROM
					            batrmstb   a,
					            batrdetb   b,
					            bapelttb   c,
					            basecttb   d
					        WHERE
					            a.hq = b.hq
					            AND a.store = b.store
					            AND a.sale_ymd = b.sale_ymd
					            AND a.pos_no = b.pos_no
					            AND a.recpt_no = b.recpt_no
					            AND a.period = c.period
					            AND b.hq = c.hq
					            AND b.store = c.store
					            AND b.subject_cd = c.subject_cd
					            and (d.store = c.store or d.store = '99')
					            and d.main_cd = c.main_cd
					            and d.sect_cd = c.sect_cd
					            and d.delete_yn != 'Y'
					            <if test="isPerformance eq 'false'.toString()">
				                     and d.performance != 'OFF'
								</if> 
					            
					            AND a.hq = '00'
					            and a.store = '${store}' 
				    			and a.period = '${period}' 
					            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            		and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
					            and c.subject_fg = '3'
					    ) t1
					    left join
					    baperetb e1
					    on
					    e1.hq = t1.hq
					    and e1.store = t1.store
					    and e1.period = t1.period
					    and e1.subject_cd = t1.subject_cd
					    and e1.seq = t1.seq_no
					    and e1.sale_ymd = t1.sale_ymd
					    and e1.recpt_no = t1.recpt_no
					    and e1.pos_no = t1.pos_no
					    left join
					    baperetb e2
					    on
					    e2.hq = t1.hq
					    and e2.store = t1.store
					    and e2.period = t1.period
					    and e2.subject_cd = t1.subject_cd
					    and e2.seq = t1.seq_no
					    and e2.sale_ymd = t1.ori_sale_ymd
					    and e2.recpt_no = t1.ori_recpt_no
					    and e2.pos_no = t1.ori_pos_no
		                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
					    
		            )
		        GROUP BY
		            sale_ymd
		    )
		GROUP BY
		    sale_ymd
		ORDER BY
		    sale_ymd
	</select>
	<select id="getMemberList" parameterType="hashmap" resultType="hashmap">
		select 
		age,
		sum(tot_cust) as tot_cust,
		sum(web_cust) as web_cust,
		sum(mobile_cust) as mobile_cust,
		sum(a_cust) as a_cust,
		sum(b_cust) as b_cust,
		sum(c_cust) as c_cust,
		sum(new) as new
		from (
		    select
		    
		    nvl((case 
	            when t1.main_cd = '2' then
	                case 
	                    when nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) is not null and nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) != 0 then 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE((select birth from bakidstb where cust_no = t1.cust_no and child_no = trim(nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0))),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                    else 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(t1.birth_ymd, '        ', '19000101', t1.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                end
	            when t1.main_cd = '3' then
	                case 
	                    when nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) is not null and nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) != 0 then 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE((select birth from bakidstb where cust_no = t1.cust_no and child_no = trim(nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0))),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                    else 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(t1.birth_ymd, '        ', '19000101', t1.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                end
	            else TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(t1.birth_ymd, '        ', '19000101', t1.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	        end), 0) as age,
			nvl(
	            case 
	                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
	                            else 2
	                        end
	                    when t1.main_cd = '3' then
	                        case 
	                            when t1.is_two = 'Y' then 2
	                            else 1
	                        end
	                    else 1
	                end
	                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
	                            else -2
	                        end
	                    when nvl(t1.main_cd, 0) = '3' then
	                        case 
	                            when t1.is_two = 'Y' then -2
	                            else -1
	                        end
	                    else -1
	                end
	                else 0
	            end
	        , 0) tot_cust,
			decode(t1.pos_no, '070013', nvl(
	            case 
	                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
	                            else 2
	                        end
	                    when t1.main_cd = '3' then
	                        case 
	                            when t1.is_two = 'Y' then 2
	                            else 1
	                        end
	                    else 1
	                end
	                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
	                            else -2
	                        end
	                    when nvl(t1.main_cd, 0) = '3' then
	                        case 
	                            when t1.is_two = 'Y' then -2
	                            else -1
	                        end
	                    else -1
	                end
	                else 0
	            end
	        , 0), 0) web_cust,
			decode(t1.pos_no, '070014',nvl(
	            case 
	                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
	                            else 2
	                        end
	                    when t1.main_cd = '3' then
	                        case 
	                            when t1.is_two = 'Y' then 2
	                            else 1
	                        end
	                    else 1
	                end
	                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
	                case 
	                    when t1.main_cd = '2' then
	                        case 
	                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
	                            else -2
	                        end
	                    when nvl(t1.main_cd, 0) = '3' then
	                        case 
	                            when t1.is_two = 'Y' then -2
	                            else -1
	                        end
	                    else -1
	                end
	                else 0
	            end
	        , 0), 0) mobile_cust,
			decode(t1.subject_fg, '1', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) a_cust,
			decode(t1.subject_fg, '2', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) b_cust,
			decode(t1.subject_fg, '3', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) c_cust,
			(
	            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPEREtb WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
	            then 
	                decode
	                (
	                    ( SELECT MIN(PERIOD)  AS COUNT             
	                    FROM BAPEREtb         
	                    WHERE
	                    STORE        =  '${store}' 
	                    AND RECPT_NO != '*'
	                    AND REGIS_CANCEL_FG = '1'
	                    AND CUST_NO    =  t1.cust_no
	                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
	                    GROUP BY CUST_NO  ), null, 1, 0
	                ) 
	            else 0 end
	        ) as new
			
			from
		    (
		        SELECT
		            c.hq,
		            c.subject_nm,
		            c.regis_fee,
		            c.food_amt,
		            c.main_cd,
		            c.sect_cd,
		            c.subject_fg,
		            c.subject_cd,
		            c.is_two,
		            a.store,
		            a.period,
		            a.sale_ymd,
		            a.recpt_no,
		            a.pos_no,
		            a.cancel_yn,
		            a.cust_no,
		            b.seq_no,
		            a.sale_fg,
		            b.uprice,
		            b.enuri_amt1,
		            b.enuri_amt2,
		            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
		            f.birth_ymd,
		            a.ori_sale_ymd,
                    a.ori_pos_no,
                    a.ori_recpt_no
		            
		            
		        FROM
		            batrmstb   a,
		            batrdetb   b,
		            bapelttb   c,
		            basecttb   d,
		            bacusttb   f
		        WHERE
		            a.hq = b.hq
		            AND a.store = b.store
		            AND a.sale_ymd = b.sale_ymd
		            AND a.pos_no = b.pos_no
		            AND a.recpt_no = b.recpt_no
		            AND a.period = c.period
		            AND b.hq = c.hq
		            AND b.store = c.store
		            AND b.subject_cd = c.subject_cd
		            and (d.store = c.store or d.store = '99')
		            and d.main_cd = c.main_cd
		            and d.sect_cd = c.sect_cd
		            and d.delete_yn != 'Y'
		            <if test="isPerformance eq 'false'.toString()">
                           and d.performance != 'OFF'
					</if> 
		            and f.cust_no(+) = a.cust_no
		            AND a.hq = '00'
		            and a.store = '${store}'
		            and a.period = '${period}' 
		            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			        and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
		    ) t1
		    left join
		    baperetb e1
		    on
		    e1.hq = t1.hq
		    and e1.store = t1.store
		    and e1.period = t1.period
		    and e1.subject_cd = t1.subject_cd
		    and e1.seq = t1.seq_no
		    and e1.sale_ymd = t1.sale_ymd
		    and e1.recpt_no = t1.recpt_no
		    and e1.pos_no = t1.pos_no
		    left join
		    baperetb e2
		    on
		    e2.hq = t1.hq
		    and e2.store = t1.store
		    and e2.period = t1.period
		    and e2.subject_cd = t1.subject_cd
		    and e2.seq = t1.seq_no
		    and e2.sale_ymd = t1.ori_sale_ymd
		    and e2.recpt_no = t1.ori_recpt_no
		    and e2.pos_no = t1.ori_pos_no
            left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)         
		    
		    
		)
		group by age
	</select>
	<select id="getMemberListBest" parameterType="hashmap" resultType="hashmap">
		select
		age,
		count(subject_cd) as cnt,
		subject_cd,
		subject_nm,
		web_lecturer_nm
		main_cd,
		sect_cd,
		ba_main_nm(main_cd) main_nm,
		ba_sect_nm('00', '${store}', main_cd, sect_cd) as sect_nm,
		regis_no,
		sum(uprice) as uprice
		from
		(
		    select
		    (case 
	            when f.main_cd = '2' then
	                case 
	                    when f.child_no is not null and f.child_no != 0 then 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE((select birth from bakidstb where cust_no = f.cust_no and child_no = trim(f.child_no)),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                    else 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(e.birth_ymd, '        ', '19000101', e.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                end
	            when f.main_cd = '3' then
	                case 
	                    when f.child_no is not null and f.child_no != 0 then 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE((select birth from bakidstb where cust_no = f.cust_no and child_no = trim(f.child_no)),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                    else 
	                    	TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(e.birth_ymd, '        ', '19000101', e.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	                end
	            else TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(decode(e.birth_ymd, '        ', '19000101', e.birth_ymd),'YYYYMMDD'),'YEAR')) /12 +1),-1)
	        end) as age,
<!-- 		    TRUNC((MONTHS_BETWEEN(TRUNC(SYSDATE,'YEAR'),TRUNC(TO_DATE(e.birth_ymd,'YYYYMMDD'),'YEAR')) /12 +1),-1) as AGE, -->
		    c.subject_cd,
		    c.subject_nm,
		    c.web_lecturer_nm,
		    c.main_cd,
		    c.sect_cd,
		    (c.regis_no+c.web_regis_no) as regis_no,
		    decode(a.sale_fg, '01', (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)), (b.uprice-nvl(b.enuri_amt1, 0) - nvl(b.enuri_amt2, 0)) * - 1) uprice
		    from 
		    batrmstb   a,
		    batrdetb   b,
		    bapelttb   c,
		    basecttb   d,
		    bacusttb   e,
		    baperetb   f
		    where 
		    a.hq = b.hq
		    AND a.store = b.store
		    AND a.sale_ymd = b.sale_ymd
		    AND a.pos_no = b.pos_no
		    AND a.recpt_no = b.recpt_no
		    AND a.period = c.period
		    AND b.hq = c.hq
		    AND b.store = c.store
		    AND b.subject_cd = c.subject_cd
		    and (d.store = c.store or d.store = '99')
		    and d.main_cd = c.main_cd
		    and d.sect_cd = c.sect_cd
		    and e.cust_no = a.cust_no
		    
		    and f.store = b.store
		    and f.sale_ymd = b.sale_ymd
		    and f.recpt_no = b.recpt_no
		    and f.pos_no = b.pos_no
		    and f.subject_cd = b.subject_cd
		    and f.seq = b.seq_no
		    
		    and d.delete_yn != 'Y'
		    <if test="isPerformance eq 'false'.toString()">
	             and d.performance != 'OFF'
			</if> 
		    AND a.hq = '00'
		    and a.store = '${store}' 
   			and a.period = '${period}' 
   			<if test="!search_start.equals('') and !search_end.equals('')">
			    and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
				and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
		    </if>
		)
		group by age, subject_cd, subject_nm, web_lecturer_nm, main_cd, sect_cd, regis_no
		order by cnt desc

	</select>
	<select id="getMemberListGender" parameterType="hashmap" resultType="hashmap">
		select 
        sex_fg,
		sum(a_cust) as a_cust,
		sum(b_cust) as b_cust,
        sum(c_cust) as c_cust
		from (
		    select
		    nvl((case 
	           when t1.main_cd = '2' then
	                case 
	                    when nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) is not null and nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) != 0 then 
	                    	(select gender from bakidstb where cust_no = t1.cust_no and child_no = trim(nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0)))
	                    else 
	                    	t1.sex_fg
	                end
	            when t1.main_cd = '3' then
	                case 
	                    when nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) is not null and nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0) != 0 then 
	                    	(select gender from bakidstb where cust_no = t1.cust_no and child_no = trim(nvl(decode(e1.child_no, NULL, e2.child_no, e1.child_no), 0)))
	                    else 
	                    	t1.sex_fg
	                end
	            else t1.sex_fg
	        end), 'M') as sex_fg,
            
            decode(t1.subject_fg, '1', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) as a_cust,
	        decode(t1.subject_fg, '2', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) as b_cust,
	        decode(t1.subject_fg, '3', nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0), 0) as c_cust
            
            
            
            
            
            from
		    (
		        SELECT
		            c.hq,
		            c.subject_nm,
		            c.regis_fee,
		            c.food_amt,
		            c.main_cd,
		            c.sect_cd,
		            c.subject_fg,
		            c.subject_cd,
		            c.is_two,
		            a.store,
		            a.period,
		            a.sale_ymd,
		            a.recpt_no,
		            a.pos_no,
		            a.cancel_yn,
		            a.cust_no,
		            b.seq_no,
		            a.sale_fg,
		            b.uprice,
		            b.enuri_amt1,
		            b.enuri_amt2,
		            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
		            f.birth_ymd,
		            f.sex_fg,
		            a.ori_sale_ymd,
                    a.ori_pos_no,
                    a.ori_recpt_no
		            
		            
		        FROM
		            batrmstb   a,
		            batrdetb   b,
		            bapelttb   c,
		            basecttb   d,
		            bacusttb   f
		        WHERE
		            a.hq = b.hq
		            AND a.store = b.store
		            AND a.sale_ymd = b.sale_ymd
		            AND a.pos_no = b.pos_no
		            AND a.recpt_no = b.recpt_no
		            AND a.period = c.period
		            AND b.hq = c.hq
		            AND b.store = c.store
		            AND b.subject_cd = c.subject_cd
		            and (d.store = c.store or d.store = '99')
		            and d.main_cd = c.main_cd
		            and d.sect_cd = c.sect_cd
		            and d.delete_yn != 'Y'
		            <if test="isPerformance eq 'false'.toString()">
                           and d.performance != 'OFF'
					</if> 
		            and f.cust_no(+) = a.cust_no
		            AND a.hq = '00'
		            and a.store = '${store}'
		            and a.period = '${period}' 
		            <if test="!search_start.equals('') and !search_end.equals('')">
					    and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
						and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
				    </if>
		    ) t1
		    left join
		    baperetb e1
		    on
		    e1.hq = t1.hq
		    and e1.store = t1.store
		    and e1.period = t1.period
		    and e1.subject_cd = t1.subject_cd
		    and e1.seq = t1.seq_no
		    and e1.sale_ymd = t1.sale_ymd
		    and e1.recpt_no = t1.recpt_no
		    and e1.pos_no = t1.pos_no
		    left join
		    baperetb e2
		    on
		    e2.hq = t1.hq
		    and e2.store = t1.store
		    and e2.period = t1.period
		    and e2.subject_cd = t1.subject_cd
		    and e2.seq = t1.seq_no
		    and e2.sale_ymd = t1.ori_sale_ymd
		    and e2.recpt_no = t1.ori_recpt_no
		    and e2.pos_no = t1.ori_pos_no
            left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)         
		    
            
   			
		)
		group by sex_fg

	</select>
	<select id="getMemberLectureCount" parameterType="hashmap" resultType="hashmap">
		select count(*) as cnt from
		(
			select
				decode(store, '02', '수원점', '03', '분당점', '04', '평택점', '05', '원주점') as store_nm,
				decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
				ba_main_nm(main_cd) main_nm,
				store, 
				main_cd,
				subject_fg,
				sum(new) as new, 
				sum(aclass) as aclass, 
				sum(diamond) as diamond, 
				sum(platinum) as platinum, 
				sum(crystal) as crystal, 
				sum(gold) as gold, 
				subject_cd, 
				subject_nm, 
				sum(regis_no) as regis_no
				
				from
				(
				
				    select			
				    t1.store,
				    t1.main_cd,
				    t1.subject_fg,
				    (
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			                    ( SELECT MIN(PERIOD)  AS COUNT             
			                    FROM BAPERETB         
			                    WHERE
			                    STORE        =  '${store}' 
			                    AND RECPT_NO != '*'
			                    AND REGIS_CANCEL_FG = '1'
			                    AND CUST_NO    =  t1.cust_no
			                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
			                    GROUP BY CUST_NO  ), null, 1, 0
			                ) 
			            else 0 end
			        ) as new,
				    (
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'E-Diamond', 1, 'Diamond', 1, 'Platinum+', 1, 'Platinum', 1, 'Crystal', 1, 'Gold', 1, 'Silver', 1, 0
			    		)
			    	else 0 end) as aclass,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'E-Diamond', 1, 'Diamond', 1, 0
			    		)
			    	else 0 end) as diamond,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Platinum+', 1, 'Platinum', 1, 0
			    		)
			    	else 0 end) as platinum,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Crystal', 1, 0
			    		)
			    	else 0 end) as crystal,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Gold', 1, 0
			    		)
			    	else 0 end) as gold,
				    t1.subject_cd,
				    t1.subject_nm,
				    nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0) as regis_no
				    
				    from
				    (
				        SELECT
				            c.hq,
				            c.subject_nm,
				            c.regis_fee,
				            c.food_amt,
				            c.main_cd,
				            c.sect_cd,
				            c.subject_fg,
				            c.subject_cd,
				            c.is_two,
				            a.store,
				            a.period,
				            a.sale_ymd,
				            a.recpt_no,
				            a.pos_no,
				            a.cancel_yn,
				            a.cust_no,
				            b.seq_no,
				            a.sale_fg,
				            b.uprice,
				            b.enuri_amt1,
				            b.enuri_amt2,
				            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
				            a.ori_sale_ymd,
	                        a.ori_pos_no,
	                        a.ori_recpt_no
				            
				            
				        FROM
				            batrmstb   a,
				            batrdetb   b,
				            bapelttb   c,
				            basecttb   d
				        WHERE
				            a.hq = b.hq
				            AND a.store = b.store
				            AND a.sale_ymd = b.sale_ymd
				            AND a.pos_no = b.pos_no
				            AND a.recpt_no = b.recpt_no
				            AND a.period = c.period
				            AND b.hq = c.hq
				            AND b.store = c.store
				            AND b.subject_cd = c.subject_cd
				            and (d.store = c.store or d.store = '99')
				            and d.main_cd = c.main_cd
				            and d.sect_cd = c.sect_cd
				            and d.delete_yn != 'Y'
				            <if test="isPerformance eq 'false'.toString()">
	                            and d.performance != 'OFF'
							</if> 
				            AND a.hq = '00'
				            and a.store = '${store}' 
				    		and a.period = '${period}' 
				            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            	and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
				            <if test="!sect_cd.equals('')">
								and c.sect_cd = ${sect_cd}
							</if>
							<if test="!main_cd.equals('')">
								and c.main_cd = ${main_cd}
							</if>
							<if test="!subject_fg.equals('')">
								and c.subject_fg = '${subject_fg}'
							</if>
				    ) t1
				    left join
				    baperetb e1
				    on
				    e1.hq = t1.hq
				    and e1.store = t1.store
				    and e1.period = t1.period
				    and e1.subject_cd = t1.subject_cd
				    and e1.seq = t1.seq_no
				    and e1.sale_ymd = t1.sale_ymd
				    and e1.recpt_no = t1.recpt_no
				    and e1.pos_no = t1.pos_no
				    left join
				    baperetb e2
				    on
				    e2.hq = t1.hq
				    and e2.store = t1.store
				    and e2.period = t1.period
				    and e2.subject_cd = t1.subject_cd
				    and e2.seq = t1.seq_no
				    and e2.sale_ymd = t1.ori_sale_ymd
				    and e2.recpt_no = t1.ori_recpt_no
				    and e2.pos_no = t1.ori_pos_no
	                left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)      
				    
				
				)
				group by 
				store, 
				main_cd,
				subject_fg,
				subject_cd, 
				subject_nm, 
				regis_no
		)
	</select>
	<select id="getMemberLecture" parameterType="hashmap" resultType="hashmap">
		select
		X.*
		from (
			select rownum as rnum, A.*
			from (
				select
				decode(store, '02', '수원점', '03', '분당점', '04', '평택점', '05', '원주점') as store_nm,
				decode(subject_fg, '1', '정규', '2', '단기', '3', '특강') as subject_fg_nm,
				ba_main_nm(main_cd) main_nm,
				store, 
				main_cd,
				subject_fg,
				sum(new) as new, 
				sum(aclass) as aclass, 
				sum(diamond) as diamond, 
				sum(platinum) as platinum, 
				sum(crystal) as crystal, 
				sum(gold) as gold, 
				subject_cd, 
				subject_nm, 
				sum(regis_no) as regis_no
				
				from
				(
				
				    select			
				    t1.store,
				    t1.main_cd,
				    t1.subject_fg,
				    (
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			                    ( SELECT MIN(PERIOD)  AS COUNT             
			                    FROM BAPERETB         
			                    WHERE
			                    STORE        =  '${store}' 
			                    AND RECPT_NO != '*'
			                    AND REGIS_CANCEL_FG = '1'
			                    AND CUST_NO    =  t1.cust_no
			                    AND PERIOD   <![CDATA[<]]>  (select get_web_period('${store}') period from dual)
			                    GROUP BY CUST_NO  ), null, 1, 0
			                ) 
			            else 0 end
			        ) as new,
				    (
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'E-Diamond', 1, 'Diamond', 1, 'Platinum+', 1, 'Platinum', 1, 'Crystal', 1, 'Gold', 1, 'Silver', 1, 0
			    		)
			    	else 0 end) as aclass,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'E-Diamond', 1, 'Diamond', 1, 0
			    		)
			    	else 0 end) as diamond,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Platinum+', 1, 'Platinum', 1, 0
			    		)
			    	else 0 end) as platinum,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Crystal', 1, 0
			    		)
			    	else 0 end) as crystal,
			    	(
			            case when t1.sale_fg = '01' and t1.cancel_yn != 'Y' AND (SELECT SALE_YMD FROM BAPERETB WHERE HQ = t1.HQ AND STORE = t1.STORE AND PERIOD = t1.PERIOD AND SALE_YMD = t1.SALE_YMD AND POS_NO = t1.POS_NO AND RECPT_NO = t1.RECPT_NO AND SUBJECT_CD = t1.SUBJECT_CD AND ROWNUM = 1) IS NOT NULL
			            then 
			                decode
			                (
			        			nvl(
			        				(select decode(bb.mbr_gdc, '109', 'E-Diamond','110','Diamond', '120', 'Platinum+', '111', 'Platinum','112', 'Crystal', '114', 'Gold', '115', 'Silver', '116', 'Bronze', '117', 'Ace', '118', 'Friends', '119', 'Entry')
		          					from ams_bz_sect_mbr_grade bb
			             			where bb.cus_no = (select cus_no from bacusttb where cust_no = t1.cust_no and store = t1.store)
			             			and bb.bz_sect = '1'
                					and to_char(sysdate,'yyyymmdd') between bb.apy_bgng_dt and bb.apy_ed_dt and rownum = 1
						        ),'Entry'
					        ), 'Gold', 1, 0
			    		)
			    	else 0 end) as gold,
				    t1.subject_cd,
				    t1.subject_nm,
				    nvl(
		            case 
		                when t1.sale_fg = '01' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then 3
		                            else 2
		                        end
		                    when t1.main_cd = '3' then
		                        case 
		                            when t1.is_two = 'Y' then 2
		                            else 1
		                        end
		                    else 1
		                end
		                when t1.sale_fg = '02' and nvl(decode(w1.mem_fg, null, w2.mem_fg, w1.mem_fg), 'A') != 'C' and (e1.hq is not null or e2.hq is not null) then
		                case 
		                    when t1.main_cd = '2' then
		                        case 
		                            when nvl(decode(e1.child_no1, null, e2.child_no1, e1.child_no1), 0) != 0 then -3
		                            else -2
		                        end
		                    when nvl(t1.main_cd, 0) = '3' then
		                        case 
		                            when t1.is_two = 'Y' then -2
		                            else -1
		                        end
		                    else -1
		                end
		                else 0
		            end
		        , 0) as regis_no
				    
				    from
				    (
				        SELECT
				            c.hq,
				            c.subject_nm,
				            c.regis_fee,
				            c.food_amt,
				            c.main_cd,
				            c.sect_cd,
				            c.subject_fg,
				            c.subject_cd,
				            c.is_two,
				            a.store,
				            a.period,
				            a.sale_ymd,
				            a.recpt_no,
				            a.pos_no,
				            a.cancel_yn,
				            a.cust_no,
				            b.seq_no,
				            a.sale_fg,
				            b.uprice,
				            b.enuri_amt1,
				            b.enuri_amt2,
				            (b.enuri_amt1+b.enuri_amt2) as enuri_amt,
				            a.ori_sale_ymd,
	                        a.ori_pos_no,
	                        a.ori_recpt_no
				            
				            
				        FROM
				            batrmstb   a,
				            batrdetb   b,
				            bapelttb   c,
				            basecttb   d
				        WHERE
				            a.hq = b.hq
				            AND a.store = b.store
				            AND a.sale_ymd = b.sale_ymd
				            AND a.pos_no = b.pos_no
				            AND a.recpt_no = b.recpt_no
				            AND a.period = c.period
				            AND b.hq = c.hq
				            AND b.store = c.store
				            AND b.subject_cd = c.subject_cd
				            and (d.store = c.store or d.store = '99')
				            and d.main_cd = c.main_cd
				            and d.sect_cd = c.sect_cd
				            and d.delete_yn != 'Y'
				            <if test="isPerformance eq 'false'.toString()">
	                            and d.performance != 'OFF'
							</if> 
				            AND a.hq = '00'
				            and a.store = '${store}' 
				    		and a.period = '${period}' 
				            and a.sale_ymd <![CDATA[>=]]> '${search_start}' 
			            	and a.sale_ymd <![CDATA[<=]]> '${search_end}' 
				            <if test="!sect_cd.equals('')">
								and c.sect_cd = ${sect_cd}
							</if>
							<if test="!main_cd.equals('')">
								and c.main_cd = ${main_cd}
							</if>
							<if test="!subject_fg.equals('')">
								and c.subject_fg = '${subject_fg}'
							</if>
				    ) t1
				    left join
				    baperetb e1
				    on
				    e1.hq = t1.hq
				    and e1.store = t1.store
				    and e1.period = t1.period
				    and e1.subject_cd = t1.subject_cd
				    and e1.seq = t1.seq_no
				    and e1.sale_ymd = t1.sale_ymd
				    and e1.recpt_no = t1.recpt_no
				    and e1.pos_no = t1.pos_no
				    left join
				    baperetb e2
				    on
				    e2.hq = t1.hq
				    and e2.store = t1.store
				    and e2.period = t1.period
				    and e2.subject_cd = t1.subject_cd
				    and e2.seq = t1.seq_no
				    and e2.sale_ymd = t1.ori_sale_ymd
				    and e2.recpt_no = t1.ori_recpt_no
				    and e2.pos_no = t1.ori_pos_no
				    left join
					    bawbtrtb w1
		                on
		                w1.hq = t1.hq
					    and w1.store = t1.store
					    and w1.period = t1.period
					    and w1.subject_cd = t1.subject_cd
					    and w1.sale_ymd = t1.sale_ymd
					    and w1.send_recpt_no = t1.recpt_no
					    and w1.pos_type = DECODE(t1.POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w1.child_no) = trim(e1.child_no)
		                left join
		                bawbtrtb w2
		                on
		                w2.hq = t1.hq
					    and w2.store = t1.store
					    and w2.period = t1.period
					    and w2.subject_cd = t1.subject_cd
					    and w2.sale_ymd = t1.ori_sale_ymd
					    and w2.send_recpt_no = t1.ori_recpt_no
					    and w2.pos_type = DECODE(t1.ori_POS_NO, '070013', 'W', '070014', 'M', '')
					    and trim(w2.child_no) = trim(e2.child_no)
	                      
				    
				
				)
				group by 
				store, 
				main_cd,
				subject_fg,
				subject_cd, 
				subject_nm, 
				regis_no
				<if test="!order_by.equals('') and !sort_type.equals('')">
					order by ${sort_type} ${order_by}
				</if>
			) A
			where rownum <![CDATA[<=]]> #{e_rownum}) X
		where X.rnum <![CDATA[>]]> #{s_rownum}
	</select>
	<select id="getAttendCount" parameterType="hashmap" resultType="hashmap">
		select count(*) as cnt from
		(
			select
			    sum(s_store) as s_store,
			    sum(b_store) as b_store,
			    sum(p_store) as p_store,
			    sum(w_store) as w_store,
			    cus_pn,
			    bmd,
			    lecr_point,
			    grade,
			    count(subject_cd) as lect_cnt
			from
			    (
			    
			    select
			        bapelttb.store,
			        decode(bapelttb.store, '02', 1, 0) as s_store,
			        decode(bapelttb.store, '03', 1, 0) as b_store,
			        decode(bapelttb.store, '04', 1, 0) as p_store,
			        decode(bapelttb.store, '05', 1, 0) as w_store,
			        ams_cus.cus_pn,
			        ams_cus.bmd,
			        NVL(BALECTURETB.point, 0) as lecr_point,
			        (
			            CASE 
			            WHEN BALECTURETB.point is null THEN '미평가'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 90 THEN 'A'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 80 THEN 'B'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 70 THEN 'C'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 60 THEN 'D'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 50 THEN 'E'
			            WHEN BALECTURETB.point <![CDATA[>=]]> 40 THEN 'F'
			            END
			        ) as grade,
			        bapelttb.subject_cd
			    from 
			        BALECTURETB, ams_cus, bapelttb 
			    where 1=1
			        and BALECTURETB.cus_no = ams_cus.cus_no
			        and BALECTURETB.cus_no = bapelttb.cus_no
			        <if test="!search_name.equals('')">
				    	and 
				    	(
				    		ams_cus.cus_no like '%'||'${search_name}'||'%'
				    		or
				    		ams_cus.cus_pn like '%'||'${search_name}'||'%'
				    		or
				    		(ams_cus.mmt_ex_no like '%'||'${search_name}'||'%' or ams_cus.mtel_uniq_no like '%'||'${search_name}'||'%')
				    		or
				    		bapelttb.subject_nm like '%'||'${search_name}'||'%'
				    	)
					</if>
			        and 
			        (
			        	(bapelttb.store = '02' and bapelttb.period = '${s_peri}') 
			        	or 
			        	(bapelttb.store = '03' and bapelttb.period = '${b_peri}')
			        	or 
			        	(bapelttb.store = '04' and bapelttb.period = '${p_peri}')
			        	or 
			        	(bapelttb.store = '05' and bapelttb.period = '${w_peri}')
			        )
			        <if test="!subject_fg.equals('')">
				    	and bapelttb.subject_fg = '${subject_fg}' 
			    	</if>
			    	<if test="!main_cd.equals('')">
						and bapelttb.main_cd = ${main_cd}
					</if>
			
					<if test="!sect_cd.equals('')">
						and bapelttb.sect_cd = ${sect_cd}
					</if>
			    	
			    )
			group by 
			    cus_pn,
			    bmd,
			    lecr_point,
			    grade
		   
		)	
	
	</select>
	<select id="getAttend" parameterType="hashmap" resultType="hashmap">
		select
		X.*
		from (
			select rownum as rnum, A.*
			from (
				select
				    sum(s_store) as s_store,
				    sum(b_store) as b_store,
				    sum(p_store) as p_store,
				    sum(w_store) as w_store,
				    cus_pn,
				    bmd,
				    lecr_point,
				    grade,
				    count(subject_cd) as lect_cnt
				from
				    (
				    
				    select
				        bapelttb.store,
				        decode(bapelttb.store, '02', 1, 0) as s_store,
				        decode(bapelttb.store, '03', 1, 0) as b_store,
				        decode(bapelttb.store, '04', 1, 0) as p_store,
				        decode(bapelttb.store, '05', 1, 0) as w_store,
				        ams_cus.cus_pn,
				        ams_cus.bmd,
				        NVL(BALECTURETB.point, 0) as lecr_point,
				        (
				            CASE 
				            WHEN BALECTURETB.point is null THEN '미평가'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 90 THEN 'A'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 80 THEN 'B'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 70 THEN 'C'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 60 THEN 'D'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 50 THEN 'E'
				            WHEN BALECTURETB.point <![CDATA[>=]]> 40 THEN 'F'
				            END
				        ) as grade,
				        bapelttb.subject_cd
				    from 
				        BALECTURETB, ams_cus, bapelttb 
				    where 1=1
				        and BALECTURETB.cus_no = ams_cus.cus_no
				        and BALECTURETB.cus_no = bapelttb.cus_no
				        <if test="!search_name.equals('')">
					    	and 
					    	(
					    		ams_cus.cus_no like '%'||'${search_name}'||'%'
					    		or
					    		ams_cus.cus_pn like '%'||'${search_name}'||'%'
					    		or
					    		(ams_cus.mmt_ex_no like '%'||'${search_name}'||'%' or ams_cus.mtel_uniq_no like '%'||'${search_name}'||'%')
					    		or
					    		bapelttb.subject_nm like '%'||'${search_name}'||'%'
					    	)
						</if>
				        and 
				        (
				        	(bapelttb.store = '02' and bapelttb.period = '${s_peri}') 
				        	or 
				        	(bapelttb.store = '03' and bapelttb.period = '${b_peri}')
				        	or 
				        	(bapelttb.store = '04' and bapelttb.period = '${p_peri}')
				        	or 
				        	(bapelttb.store = '05' and bapelttb.period = '${w_peri}')
				        )
				        <if test="!subject_fg.equals('')">
					    	and bapelttb.subject_fg = '${subject_fg}' 
				    	</if>
				    	<if test="!main_cd.equals('')">
							and bapelttb.main_cd = ${main_cd}
						</if>
				
						<if test="!sect_cd.equals('')">
							and bapelttb.sect_cd = ${sect_cd}
						</if>
				    	
				    )
				group by 
				    cus_pn,
				    bmd,
				    lecr_point,
				    grade
				    
					<if test="!order_by.equals('') and !sort_type.equals('')">
						order by ${sort_type} ${order_by}
					</if>
				) A
				where rownum <![CDATA[<=]]> #{e_rownum}) X
			where X.rnum <![CDATA[>]]> #{s_rownum}
				
	
	</select>
	<select id="getRoomList" parameterType="hashmap" resultType="hashmap">
		select 
		    room_nm,
		    count(subject_cd) as lect_cnt,
		    sum(end_yn) as end_cnt,
		    sum(capacity_no) as capacity_no,
		    sum(regis_no) as regis_no
		from
		(
		    select
		        a.room_nm,
		        b.subject_cd,
		        b.capacity_no,
		        decode(b.end_yn, 'Y', 1, 0) as end_yn,
		        (b.regis_no+b.web_regis_no) as regis_no
		    from 
		        baroomtb a, 
		        bapelttb b
		    where 
		        a.hq = b.hq
		        AND a.store = b.store
		        and a.seq_no = b.classroom
		        and b.store = '${store}' 
				and b.period = '${period}' 
		        <if test="!subject_fg.equals('')">
					and b.subject_fg = '${subject_fg}'
				</if>
		)
		group by room_nm
				
	</select>
</mapper>